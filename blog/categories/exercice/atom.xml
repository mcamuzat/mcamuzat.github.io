<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Exercice | Mon blog perso.]]></title>
  <link href="http://mcamuzat.github.io/blog/categories/exercice/atom.xml" rel="self"/>
  <link href="http://mcamuzat.github.io/"/>
  <updated>2015-05-05T00:16:58+02:00</updated>
  <id>http://mcamuzat.github.io/</id>
  <author>
    <name><![CDATA[mcamuzat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[10print]]></title>
    <link href="http://mcamuzat.github.io/blog/2015/04/15/10print/"/>
    <updated>2015-04-15T22:38:15+02:00</updated>
    <id>http://mcamuzat.github.io/blog/2015/04/15/10print</id>
    <content type="html"><![CDATA[<p>Je suis tombé un peu par hasard sur la critique du livre <a href="http://10print.org/">10 PRINT</a> , le pdf du livre est gratuit et plutôt joli, il parle de programmation, d&#8217;art et d&#8217;aléatoire.
Tout le livre est centré sur le programme de basic suivant qui donne l&#8217;image de la couverture.</p>

<pre><code>10 PRINT CHR$(205.5+RND(1)); : GOTO 10
/\\\\\\//\\////\\/\/\/\//\///////\\/////\///\\/\\
\/\///\/\//\\//\\\/\\\/\///\\\\\\/\/\\\\\\/\\\/\\
\\////\/////\\\\\\\/\\\\\\\\\\\//////\/\/\\\\/\//
/\//\\\/\\\/\\///\\//\////\\/\/\//\\//\//\\/////\
///\\/\\\\///\\/\/////\\\/\\\///\//\\\\//\\//\//\
//\\\\//\\/\//\\//\///\\/////\///\/\//\/\//\//\\/
//\/\/\///\\\/\//\////\\\//\/\/\\\\\\//\\\\\///\/
//\\/\\\//\////\//\\\\\/\////\\\///\/\\/\//\\\///
//\//\/\\\\\//////\///\/\\\/\/\/\\//\\/\\\//\//\\
//\/\/\\\/\\/\/\////\//\\//\\//\/\///\/\/////\///
//\\//\\\/////\//\//\\/\\//\/\//\//\\/\//\\\\\//\
</code></pre>

<p>Bon la police d&#8217;écriture ne rend pas vraiment justice au code.</p>

<p>C&#8217;est possible de faire le même motif en PHP et en peu de code ?</p>

<p>Une solution
<code>php
$out = array('/', '\\');
for($i = 0; $i &lt; 1000; $i++){
    echo $out[array_rand($out)];
}
</code></p>

<p>Attention <code>array_rand</code> renvoie la clé et non la valeur d&#8217;où le <code>$out[array_rand($out)]</code></p>

<p>Et puis je me suis dit que array_rand ne sert pas à grand chose.</p>

<p>Donc j&#8217;ai essayé
<code>php
$out = array('/', '\\');
for($i =0; $i &lt; 1000; $i++){
 echo $out[rand(0,1)];
}
</code>
pour générer des nombres aléatoire, il vaut mieux utiliser <code>mt_rand</code> qui d&#8217;après la documentation génère des nombres aléatoires plus intéressants (?). Pour des vrai nombres aléatoires pour les mots de passe,  on utilise des librairies voir cette <a href="http://blog.ircmaxell.com/2013/01/password-storage-talk-at-php-benelux-13.html">présentation</a>.</p>

<p>Mais il est possible d&#8217;initialiser plus d&#8217;une constante dans la boucle for.</p>

<pre><code>for($i =0, $out = array('/', '\\'); $i &lt; 1000; $i++){
 echo $out[mt_rand(0,1)];
}
</code></pre>

<p>On peut aussi faire plus d&#8217;une action dans l&#8217;incrémentation.</p>

<pre><code>for($i = 0, $out = array('/', '\\'); $i &lt; 1000; $i++, echo $out[mt_rand(0,1)])
);
</code></pre>

<p>On minimise les variables et la notation avec les <code>[]</code></p>

<p>Nous obtenons le code suivant</p>

<pre><code class="php">for($i =0, $o = ['/', '\\']; $i &lt; 1000; $i++, echo $o[mt_rand(0,1)]);
</code></pre>

<p>Je n&#8217;avais jamais écris de boucle for sans corps(<code>{..}</code>).</p>

<p>La documentation de PHP est plutôt claire sur le <a href="http://php.net/manual/fr/control-structures.for.php">for</a></p>
]]></content>
  </entry>
  
</feed>

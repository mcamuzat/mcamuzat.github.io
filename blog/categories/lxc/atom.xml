<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lxc | Journal d'un panda qui code]]></title>
  <link href="http://mcamuzat.github.io/blog/categories/lxc/atom.xml" rel="self"/>
  <link href="http://mcamuzat.github.io/"/>
  <updated>2016-05-17T17:48:54+02:00</updated>
  <id>http://mcamuzat.github.io/</id>
  <author>
    <name><![CDATA[mcamuzat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Proxmox 4 partie 3 : Connection via ssh]]></title>
    <link href="http://mcamuzat.github.io/blog/2016/05/17/proxmox-partie-3-connection-via-ssh/"/>
    <updated>2016-05-17T14:54:12+02:00</updated>
    <id>http://mcamuzat.github.io/blog/2016/05/17/proxmox-partie-3-connection-via-ssh</id>
    <content type="html"><![CDATA[<p>Nous avons vus dans les deux anciens post:</p>

<ul>
<li><a href="/blog/2016/02/28/installation-dun-proxmox-4-dot-0/">comment régler le proxmox et le réseau</a></li>
<li><a href="/blog/2016/03/08/installation-dun-proxmox-4-dot-0-partie-2-nginx/">comment rediriger le trafic avec nginx</a></li>
</ul>


<p>Nous allons voir comment simplifier l&#8217;accès en mettant un accès SSH sur chaque instance. Pour se connecter à l&#8217;instance 101. La commande sera
<code>
ssh deploy@&lt;url/ip du proxmox&gt; -p50101
</code></p>

<p>Enfin je donne la version complète du fichier <code>ipstable_start.sh</code></p>

<!--more-->


<h2>Introduction</h2>

<p>Pour se connecter sur un instance pour le moment on est obligé de passé par l&#8217;interface graphique ou par la ligne de commande. La ligne de commande n&#8217;est pas évidente( pour quitter <code>Ctrl A</code> + <code>q</code>) et pas pratique. On aimerait pourvoir se connecter via l&#8217;extérieur pour mettre en place du déploiement automatique genre <a href="http://capistranorb.com/">capistrano</a></p>

<h3>Par rapport au PROXMOX 3.</h3>

<p>Avec OpenVZ par défaut le ssh est ouvert pour l&#8217;utilisateur root. <em>Ce n&#8217;est pas le cas sur LXC</em>.
Deux possibilités:</p>

<ul>
<li>Ajouter un utilisateur deploy : <code>sudo adduser deploy</code> sur l&#8217;instance, c&#8217;est d&#8217;ailleurs en un sens inévitable si vous travaillez en équipe.</li>
<li>Ou autoriser l&#8217;utilisateur root à se connecter à l&#8217;extérieur. Il faut modifier le fichier <code>/etc/ssh/sshd_config</code> sur l&#8217;instance et modifier la ligne <code>PermitRootLogin without-password</code> à <code>PermitRootLogin yes</code></li>
</ul>


<h3>Redirection via iptable</h3>

<p>voici la syntaxe pour la machine <code>vm101</code>.
On redirige le port 50101 du proxmox vers la vm101 port 22
<code>
iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport 50101 -j DNAT --to-destination 192.168.15.101:22
</code>
On peut faire une boucle for pour créer par défaut. <code>vm101-&gt;50101, vm102-&gt;50102, ..</code>
<code>
for i in {1..200}
do
   let "inport=50+$i"
   iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport $inport -j DNAT --to-destination 192.168.15.$i:22
done
</code></p>

<p>Il y aussi des règles sur mesure, Dans mon fichier vous verrez l&#8217;exemple de Node+Socket.io ou je redirige le port 8000 du proxmox vers l&#8217;instance 102
<code>
iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport 8000 -j DNAT --to-destination 192.168.15.102:8000
</code></p>

<p>Enfin le fichier final.</p>

<pre><code class="sh   ">#!/bin/bash

#vider table NAT
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

# On laisse sortir les vm
iptables -t nat -A POSTROUTING -s 192.168.15.0/24 -o vmbr0 -j MASQUERADE

# Je redirige tout le trafic web vers instance nginx

iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport 80 -j DNAT --to-destination 192.168.15.&lt;instance du nginx&gt;:80

# Les instances sont joignable via la commande suivante
# ssh &lt;user_instance&gt;@&lt;ip ou url du proxmox&gt; -p 50+&lt;instance&gt;
# par exemple:
# ssh deploy@monadress.com -p 50102
# se connecte sur le vm102 avec l'utilisateur deploy (capistrano)
for i in {1..200}
do
   let "inport=50+$i"
   iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport $inport -j DNAT --to-destination 192.168.15.$i:22
done

# la vm 102 est un node.js+socket.io
iptables -t nat -A PREROUTING -i vmbr0 -p tcp --dport 8000 -j DNAT --to-destination 192.168.15.102:8000
</code></pre>

<h2>Un exemple pour capistrano</h2>

<p>un exemple pour la vm101 (si l&#8217;utilisateur deploy existe..)</p>

<p>Un morceau de <code>deploy.rb</code>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh_options</span><span class="o">[</span><span class="ss">:port</span><span class="o">]</span> <span class="o">=</span> <span class="mi">50101</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;path the directory&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span>   <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">www</span><span class="o">/</span><span class="n">le_projet</span><span class="o">/&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:branch</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">master</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;set :domain,      &amp;ldquo;&lt;url du proxmox&gt;&amp;rdquo;</span>
</span><span class='line'><span class="sr">role :web,        domain                         # Your HTTP server, Apache/e</span><span class="n">tc</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:app</span><span class="p">,</span>        <span class="n">domain</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>       <span class="c1"># This may be the same as your &lt;code&gt;Web&lt;/code&gt; server</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:db</span><span class="p">,</span>         <span class="n">domain</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>       <span class="c1"># This may be the same as your &lt;code&gt;Web&lt;/code&gt; server&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Use</span> <span class="no">SSH</span> <span class="n">agent</span> <span class="n">forwarding</span> <span class="n">to</span> <span class="n">deploy</span> <span class="n">via</span> <span class="no">Capistrano</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;ssh_options[:forward_agent] = true&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Set</span> <span class="n">user</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;set :user, &amp;ldquo;deploy&amp;rdquo;</span>
</span><span class='line'><span class="sr">set :group, &amp;ldquo;deploy&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Alors la commande
<code>
cap deploy
</code>
se connecte tout seul sur la Vm</p>

<p>La <a href="http://capistranorb.com/documentation/getting-started/authentication-and-authorisation/">documentation</a> de capistrano est bien faite.
Pour Symfony il existe <a href="https://github.com/everzet/capifony">capyfony</a> mais c&#8217;est depreacted depuis..</p>

<h1>Conclusion</h1>

<p>J&#8217;ai eu beaucoup de mal à trouver des documentations à jours pour le PROXMOX 4. Cette série d&#8217;article contient le résultat de mes recherches. (Je remercie aussi mes collègues pour l&#8217;aide).</p>

<p>Il y a plein de liens qui expliquent beaucoup mieux que moi. N&#8217;hésitez pas à commencer par ceux-là et revenez sur mes posts pour adapter de proxmox3 à proxmox4.
Je pense surtout à</p>

<ul>
<li><a href="http://myatus.com/p/poor-mans-proxmox-cluster/">proxmox cluster</a></li>
<li><a href="http://blog.ganbaranai.fr/2013/08/il-etait-une-fois-proxmox-derriere-une-ip-unique/">Il était une fois, Proxmox derrière une IP unique …</a> Humblement je n&#8217;ai pas tout compris.</li>
</ul>


<p>Merci de m&#8217;avoir lu.</p>

<ul>
<li>Partie 1 : <a href="/blog/2016/02/28/installation-dun-proxmox-4-dot-0/">Proxmox : mise en place</a></li>
<li>Partie 2 : <a href="/blog/2016/03/08/installation-dun-proxmox-4-dot-0-partie-2-nginx/">Proxmox : Nginx</a></li>
<li>Partie 3 : <a href="/blog/2016/05/17/proxmox-partie-3-connection-via-ssh/">Proxmox : Réglage ssh</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installation d'un proxmox 4.0]]></title>
    <link href="http://mcamuzat.github.io/blog/2016/02/28/installation-dun-proxmox-4-dot-0/"/>
    <updated>2016-02-28T16:47:39+01:00</updated>
    <id>http://mcamuzat.github.io/blog/2016/02/28/installation-dun-proxmox-4-dot-0</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p><img class="center" src="/images/proxmox-logo.png" width="292" height="35" title="&lsquo;logo de proxmox&rsquo; &lsquo;logo de proxmox&rsquo;" ></p>

<p>J&#8217;ai acheté un serveur dédié chez OVH. Au travail nous utilisons un <a href="https://www.proxmox.com/en/proxmox-ve">Proxmox</a> En solution de virtualisation. Étant plutôt content du logiciel. J&#8217;ai tout naturellement installé Proxmox sur mon serveur dédié. J&#8217;en ai profité pour passer à la version 4.</p>

<p>Mais &hellip;</p>

<p>Proxmox V4 utilise <a href="https://help.ubuntu.com/community/LXC">LXC</a>  alors que la version précédente utilise <a href="https://openvz.org/Main_Page">OpenVZ</a>. Et tous les tutoriaux sont globalement sur les versions 3.</p>

<p>Je suis arrivé à installer le logiciel. Voici le résumé de la première partie</p>

<ul>
<li>Installation du Proxmox</li>
<li>Réglage du Réseau</li>
<li>Création d&#8217;une première instance.</li>
</ul>


<!--more-->


<h2>Installations de proxmox</h2>

<p>J&#8217;ai acheté la machine déjà installée sur <a href="https://www.ovh.com/fr/">OVH</a>.</p>

<p>Pas grand chose à dire dessus.</p>

<h2>Réglage du réseau</h2>

<p>se connecter en ssh
<code>
ssh root@&lt;ip_de_la_machine&gt;
</code>
dans le <code>/etc/network/interfaces</code>
C&#8217;est un peu la ou j&#8217;ai eu beaucoup de mal. Par défaut il y a normalement déjà deux interfaces virtuelles (des bridges pour être plus précis) déjà installées. <code>vmbr0</code> et <code>vmbr1</code>.</p>

<ul>
<li><strong>Ne touchez pas à <code>vmbr0</code></strong></li>
</ul>


<p>Voici la configuration de mon serveur.</p>

<pre><code># This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback

# for Routing
auto vmbr1
iface vmbr1 inet static
        #post-up /etc/pve/kvm-networking.sh
        address 192.168.15.20/24
        bridge_ports none
        bridge_stp off
        bridge_fd 0


# vmbr0: Bridging. Make sure to use only MAC adresses that were assigned to you.
auto vmbr0
iface vmbr0 inet static
      ... l'ip de la machine ..

iface vmbr0 inet6 static
      ... la même chose en ipv6..
</code></pre>

<p>Je n&#8217;ai rajouté que les lignes suivantes dans vmbr1
<code>
        address 192.168.15.20/24
        bridge_ports none
        bridge_stp off
        bridge_fd 0
</code></p>

<p>Il faut aussi activer l&#8217;IP forwarding
pour ce faire il faut éditer le fichier <code>/etc/sysctl.conf</code>
<code>
/etc/sysctl.conf:
net.ipv4.ip_forward = 1
</code></p>

<p>Il faut lancer le programme pour prendre en compte les modifications</p>

<pre><code>sysctl -p /etc/sysctl.conf
</code></pre>

<p>Et redémarrer le service network</p>

<pre><code>service network restart
</code></pre>

<h2>Mise en place de Iptable.</h2>

<p>Voici le script dans le répertoire
<code>/root/iptables_start.sh</code></p>

<pre><code class="sh">#!/bin/bash

#vider table NAT
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

# On laisse sortir les VM/container
iptables -t nat -A POSTROUTING -s 192.168.15.0/24 -o vmbr0 -j MASQUERADE
</code></pre>

<p>La première partie vide toute les règles de redirection.</p>

<p>La seconde partie va permettre au VM dont l&#8217;IP est entre 192.168.15.1 à 192.168.15.254 de sortir sur le réseau.</p>

<h2>Résumé</h2>

<ul>
<li>Nous avons réglé <code>vmbr1</code> avec une adresse en 192.168.15.20/24</li>
<li>Nous avons activé le forward d&#8217;IP</li>
<li>Nous avons créer un script <code>iptables_start.sh</code> qui supprime les anciennes regles et qui permet au réseau 192.168.15.0/24 de récuperer le net.</li>
</ul>


<h2>Créer sa Première instance.</h2>

<p>Allons sur la dashboard de votre proxmox (voir mail OVH)</p>

<h3>Récupérer des Isos/templates</h3>

<p>Normalement vous avez une icônes avec un disque dur avec normal(..) cliquer sur <code>content-&gt;menu Template</code></p>

<p><img class="center" src="/images/choixtemplate.png" width="600" height="407" title="&lsquo;choix des isos templates&rsquo; &lsquo;choix des isos templates&rsquo;" ></p>

<p>Téléchargeons une Ubuntu.</p>

<h3>Créer un container</h3>

<p>Cliquer sur l&#8217;icône <code>create CT</code> en haut à droite.</p>

<h4>Général</h4>

<p>Normalement avoir l&#8217;image suivante.
<img class="center" src="/images/creationvmgeneral.png" width="600" height="379" title="&lsquo;création nouveau container&rsquo; &lsquo;création nouveau container&rsquo;" >
Mettons le noms de l&#8217;instance <code>nginxproxy</code> et mettons un mots de passe. Normalement on vous propose <code>VM ID 101</code> si vous n&#8217;avez aucun container.</p>

<h4>Template</h4>

<p>Mettre l&#8217;iso Ubuntu que vous venez de télécharger</p>

<h4>Root Disk</h4>

<p>8 giga c&#8217;est très bien</p>

<h4>CPU</h4>

<p>C&#8217;est ici que l&#8217;on regle le nombre de cpu</p>

<h4>La mémoire</h4>

<p>Vous pouvez rajouter de la mémoire ici (2Giga en Memoire, Swap 512)</p>

<h4>Network</h4>

<p>C&#8217;est ici que c&#8217;est un peu plus compliqué</p>

<p><img class="center" src="/images/creationvmreseau.png" width="600" height="390" title="&lsquo;réglage du réseau&rsquo; &lsquo;réglage du réseau&rsquo;" >
dans le bridge mettre <strong>vmbr1</strong></p>

<p>Dans l&#8217;ip c&#8217;est simple c&#8217;est <code>192.168.15.&lt;numéro d'instance&gt;/24</code>. si vous avez l&#8217;instance 101 alors l&#8217;ip est <code>192.168.15.101/24</code></p>

<p>Dans la <em>gateway</em> c&#8217;est <code>192.168.15.20</code> la même IP défini dans le <code>vmbr1</code></p>

<h4>Dns</h4>

<p>Rien à faire..</p>

<p>Vous n&#8217;avez plus qu&#8217;a confirmer. Normalement en 15 secondes la VM est crée.</p>

<h4>Finition.</h4>

<p>Avant d&#8217;allumer la vm cliquer sur l&#8217;icône de la VM puis <code>Options</code> puis cliquez sur la ligne <code>Start at boot</code> puis <code>Edit</code> et <code>yes</code> si le proxmox redémarre, on relance la machine (ce qui n&#8217;est pas le cas par défaut)</p>

<h4>Allumage</h4>

<p>Vous pouvez lancer la vm cliquez sur start.</p>

<h2>Conclusion</h2>

<p>Nous avons réglé le proxmox, installé la première instance. dans la partie 2 nous nous connecterons sur l&#8217;instance pour terminer les réglages. Nous mettrons en place aussi le nginx pour rediriger les urls vers les bonnes instances.</p>

<ul>
<li>Partie 1 : <a href="/blog/2016/02/28/installation-dun-proxmox-4-dot-0/">Proxmox : mise en place</a></li>
<li>Partie 2 : <a href="/blog/2016/03/08/installation-dun-proxmox-4-dot-0-partie-2-nginx/">Proxmox : Nginx</a></li>
<li>Partie 3 : <a href="/blog/2016/05/17/proxmox-partie-3-connection-via-ssh/">Proxmox : Réglage ssh</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
